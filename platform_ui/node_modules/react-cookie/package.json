{
  "name": "react-cookie",
  "version": "0.4.2",
  "description": "Load and save cookies within your React application",
  "main": "index.js",
  "files": [
    "index.js",
    "dist/react-cookie.js",
    "dist/react-cookie.min.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/eXon/react-cookie.git"
  },
  "bugs": {
    "url": "https://github.com/eXon/react-cookie/issues"
  },
  "keywords": [
    "cookie",
    "cookies",
    "react",
    "reactjs",
    "jsx"
  ],
  "author": {
    "name": "Benoit Tremblay",
    "email": "trembl.ben@gmail.com"
  },
  "license": "MIT",
  "scripts": {
    "build": "mkdir -p dist && browserify index.js > dist/react-cookie.js && uglifyjs dist/react-cookie.js -o dist/react-cookie.min.js",
    "test": "node_modules/.bin/minijasminenode2 test.js"
  },
  "dependencies": {
    "cookie": "^0.1.2"
  },
  "devDependencies": {
    "browserify": "^9.0.3",
    "minijasminenode2": "^1.0.0",
    "uglify-js": "^2.4.17"
  },
  "readme": "# react-cookie\nLoad, save and remove cookies within your React application\n\n## Isomorphic cookies!\nYou can also plug it directly with a Node.js request by adding just before the renderToString: `reactCookie.plugToRequest(req, res);`<br />\n*(require the cookieParser middleware)*\n\nIf you are within a non-browser or Node.js environment, you can use `reactCookie.setRawCookie(req.headers.cookie)`\n\n## Download\nNPM: `npm install react-cookie`<br />\nBower: `bower install react-cookie`<br />\nCDN: `https://cdnjs.cloudflare.com/ajax/libs/react-cookie/0.3.4/react-cookie.min.js`\n\n# Examples\n\n## ES6\n```js\nimport React from 'react';\nimport cookie from 'react-cookie';\n\nexport default class MyApp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { userId: cookie.load('userId') };\n  }\n\n  onLogin(userId) {\n    this.state.userId = userId;\n    cookie.save('userId', userId);\n  }\n\n  onLogout() {\n    cookie.remove('userId');\n  }\n\n  render() {\n    return (\n      <LoginPanel onSuccess={this.onLogin.bind(this)} />\n    );\n  }\n\n}\n```\n\n## ES5\n```js\nvar React = require('react');\nvar cookie = require('react-cookie');\n\nvar MyApp = React.createClass({\n\n  getInitialState: function() {\n    return { userId: cookie.load('userId') };\n  },\n\n  onLogin: function(userId) {\n    this.state.userId = userId;\n    cookie.save('userId', userId);\n  },\n\n  onLogout: function() {\n    cookie.remove('userId');\n  },\n\n  render: function() {\n    return (\n      <LoginPanel onSuccess={this.onLogin} />\n    );\n  }\n\n});\n\nmodule.exports = MyApp;\n```\n\n## Without CommonJS\nYou can use react-cookie with anything by using the global variable `reactCookie`.\n\n*Note that `window` need to exists to use `reactCookie`.*\n\n## Usage\n\n### `reactCookie.load(name, [doNotParse])`\n### `reactCookie.save(name, val, [opt])`\n### `reactCookie.remove(name, [opt])`\n### `reactCookie.plugToRequest(req, res)`\n### `reactCookie.setRawCookie(cookies)`\n\n## opt\nSupport all the cookie options from the RFC.\n\n### path\n> cookie path\n\n### expires\n> absolute expiration date for the cookie (Date object)\n\n### maxAge\n> relative max age of the cookie from when the client receives it (seconds)\n\n### domain\n> domain for the cookie\n\n### secure\n> true or false\n\n### httpOnly\n> true or false\n\n## License\nThis project is under the MIT license. You are free to do whatever you want with it.\n",
  "readmeFilename": "README.md",
  "_id": "react-cookie@0.4.2",
  "_from": "react-cookie@"
}
